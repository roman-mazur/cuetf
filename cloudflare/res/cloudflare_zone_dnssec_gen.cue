package res

#cloudflare_zone_dnssec: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/cloudflare_zone_dnssec")
	close({
		// Algorithm key code.
		algorithm?: string

		// Digest hash.
		digest?: string

		// Type of digest algorithm.
		digest_algorithm?: string

		// Coded type for digest algorithm.
		digest_type?: string

		// If true, multi-signer DNSSEC is enabled on the zone, allowing
		// multiple
		// providers to serve a DNSSEC-signed zone at the same time.
		// This is required for DNSKEY records (except those automatically
		// generated by Cloudflare) to be added to the zone.
		//
		// See [Multi-signer
		// DNSSEC](https://developers.cloudflare.com/dns/dnssec/multi-signer-dnssec/)
		// for details.
		dnssec_multi_signer?: bool

		// If true, allows Cloudflare to transfer in a DNSSEC-signed zone
		// including signatures from an external provider, without
		// requiring
		// Cloudflare to sign any records on the fly.
		//
		// Note that this feature has some limitations.
		// See [Cloudflare as
		// Secondary](https://developers.cloudflare.com/dns/zone-setups/zone-transfers/cloudflare-as-secondary/setup/#dnssec)
		// for details.
		dnssec_presigned?: bool

		// If true, enables the use of NSEC3 together with DNSSEC on the
		// zone.
		// Combined with setting dnssec_presigned to true, this enables
		// the use of
		// NSEC3 records when transferring in from an external provider.
		// If dnssec_presigned is instead set to false (default), NSEC3
		// records will be
		// generated and signed at request time.
		//
		// See [DNSSEC with
		// NSEC3](https://developers.cloudflare.com/dns/dnssec/enable-nsec3/)
		// for details.
		dnssec_use_nsec3?: bool

		// Full DS record.
		ds?: string

		// Flag for DNSSEC record.
		flags?: number

		// Identifier.
		id?: string

		// Code for key tag.
		key_tag?: number

		// Algorithm key type.
		key_type?: string

		// When DNSSEC was last modified.
		modified_on?: string

		// Public key for DS record.
		public_key?: string

		// Status of DNSSEC, based on user-desired state and presence of
		// necessary records.
		// Available values: "active", "disabled".
		status?: string

		// Identifier.
		zone_id!: string
	})
}
