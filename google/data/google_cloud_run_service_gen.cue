package data

#google_cloud_run_service: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/google_cloud_run_service")
	close({
		// If set to 'true', the revision name (template.metadata.name)
		// will be omitted and
		// autogenerated by Cloud Run. This cannot be set to 'true' while
		// 'template.metadata.name'
		// is also set.
		// (For legacy support, if 'template.metadata.name' is unset in
		// state while
		// this field is set to false, the revision name will still
		// autogenerate.)
		autogenerate_revision_name?: bool

		// The location of the cloud run instance. eg us-central1
		location!: string
		id?:       string

		// Metadata associated with this Service, including name,
		// namespace, labels,
		// and annotations.
		metadata?: [...close({
			annotations?: [string]:           string
			effective_annotations?: [string]: string
			effective_labels?: [string]:      string
			generation?: number
			labels?: [string]: string
			namespace?:        string
			resource_version?: string
			self_link?:        string
			terraform_labels?: [string]: string
			uid?: string
		})]

		// Name must be unique within a Google Cloud project and region.
		// Is required when creating resources. Name is primarily intended
		// for creation idempotence and configuration definition. Cannot
		// be updated.
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
		name!:    string
		project?: string

		// The current status of the Service.
		status?: [...close({
			conditions?: [...close({
				message?: string
				reason?:  string
				status?:  string
				type?:    string
			})]
			latest_created_revision_name?: string
			latest_ready_revision_name?:   string
			observed_generation?:          number
			traffic?: [...close({
				latest_revision?: bool
				percent?:         number
				revision_name?:   string
				tag?:             string
				url?:             string
			})]
			url?: string
		})]

		// template holds the latest specification for the Revision to
		// be stamped out. The template references the container image,
		// and may also
		// include labels and annotations that should be attached to the
		// Revision.
		// To correlate a Revision, and/or to force a Revision to be
		// created when the
		// spec doesn't otherwise change, a nonce label may be provided in
		// the
		// template metadata. For more details, see:
		// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
		//
		// Cloud Run does not currently support referencing a build that
		// is
		// responsible for materializing the container image from source.
		template?: [...close({
			metadata?: [...close({
				annotations?: [string]: string
				generation?: number
				labels?: [string]: string
				name?:             string
				namespace?:        string
				resource_version?: string
				self_link?:        string
				uid?:              string
			})]
			spec?: [...close({
				container_concurrency?: number
				containers?: [...close({
					args?: [...string]
					command?: [...string]
					env?: [...close({
						name?:  string
						value?: string
						value_from?: [...close({
							secret_key_ref?: [...close({
								key?:  string
								name?: string
							})]
						})]
					})]
					env_from?: [...close({
						config_map_ref?: [...close({
							local_object_reference?: [...close({
								name?: string
							})]
							optional?: bool
						})]
						prefix?: string
						secret_ref?: [...close({
							local_object_reference?: [...close({
								name?: string
							})]
							optional?: bool
						})]
					})]
					image?: string
					liveness_probe?: [...close({
						failure_threshold?: number
						grpc?: [...close({
							port?:    number
							service?: string
						})]
						http_get?: [...close({
							http_headers?: [...close({
								name?:  string
								value?: string
							})]
							path?: string
							port?: number
						})]
						initial_delay_seconds?: number
						period_seconds?:        number
						timeout_seconds?:       number
					})]
					name?: string
					ports?: [...close({
						container_port?: number
						name?:           string
						protocol?:       string
					})]
					resources?: [...close({
						limits?: [string]:   string
						requests?: [string]: string
					})]
					startup_probe?: [...close({
						failure_threshold?: number
						grpc?: [...close({
							port?:    number
							service?: string
						})]
						http_get?: [...close({
							http_headers?: [...close({
								name?:  string
								value?: string
							})]
							path?: string
							port?: number
						})]
						initial_delay_seconds?: number
						period_seconds?:        number
						tcp_socket?: [...close({
							port?: number
						})]
						timeout_seconds?: number
					})]
					volume_mounts?: [...close({
						mount_path?: string
						name?:       string
					})]
					working_dir?: string
				})]
				node_selector?: [string]: string
				service_account_name?: string
				serving_state?:        string
				timeout_seconds?:      number
				volumes?: [...close({
					csi?: [...close({
						driver?:    string
						read_only?: bool
						volume_attributes?: [string]: string
					})]
					empty_dir?: [...close({
						medium?:     string
						size_limit?: string
					})]
					name?: string
					nfs?: [...close({
						path?:      string
						read_only?: bool
						server?:    string
					})]
					secret?: [...close({
						default_mode?: number
						items?: [...close({
							key?:  string
							mode?: number
							path?: string
						})]
						secret_name?: string
					})]
				})]
			})]
		})]

		// Traffic specifies how to distribute traffic over a collection
		// of Knative Revisions
		// and Configurations
		traffic?: [...close({
			latest_revision?: bool
			percent?:         number
			revision_name?:   string
			tag?:             string
			url?:             string
		})]
	})
}
