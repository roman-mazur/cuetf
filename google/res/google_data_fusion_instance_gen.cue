package res

import "list"

#google_data_fusion_instance: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/google_data_fusion_instance")
	close({
		// Endpoint on which the REST APIs is accessible.
		api_endpoint?: string

		// The time the instance was created in RFC3339 UTC "Zulu" format,
		// accurate to nanoseconds.
		create_time?: string

		// User-managed service account to set on Dataproc when Cloud Data
		// Fusion creates Dataproc to run data processing pipelines.
		dataproc_service_account?: string

		// An optional description of the instance.
		description?: string

		// Display name for an instance.
		display_name?: string

		// All of labels (key/value pairs) present on the resource in GCP,
		// including the labels configured through Terraform, other
		// clients and services.
		effective_labels?: [string]: string

		// Option to enable granular role-based access control.
		enable_rbac?: bool

		// Option to enable Stackdriver Logging.
		enable_stackdriver_logging?: bool

		// Option to enable Stackdriver Monitoring.
		enable_stackdriver_monitoring?: bool

		// Cloud Storage bucket generated by Data Fusion in the customer
		// project.
		gcs_bucket?: string

		// The resource labels for instance to use to annotate any related
		// underlying resources,
		// such as Compute Engine VMs.
		//
		//
		// **Note**: This field is non-authoritative, and will only manage
		// the labels present in your configuration.
		// Please refer to the field 'effective_labels' for all of the
		// labels present on the resource.
		labels?: [string]: string
		id?: string

		// The ID of the instance or a fully qualified identifier for the
		// instance.
		name!: string

		// Map of additional options used to configure the behavior of
		// Data Fusion instance.
		options?: [string]: string

		// P4 service account for the customer project.
		p4_service_account?: string

		// Specifies whether the Data Fusion instance should be private.
		// If set to
		// true, all Data Fusion nodes will have private IP addresses and
		// will not be
		// able to access the public internet.
		private_instance?: bool
		accelerators?: matchN(1, [#accelerators, [...#accelerators]])
		crypto_key_config?: matchN(1, [#crypto_key_config, list.MaxItems(1) & [...#crypto_key_config]])
		event_publish_config?: matchN(1, [#event_publish_config, list.MaxItems(1) & [...#event_publish_config]])
		network_config?: matchN(1, [#network_config, list.MaxItems(1) & [...#network_config]])
		timeouts?: #timeouts
		project?:  string

		// The region of the Data Fusion instance.
		region?: string

		// Endpoint on which the Data Fusion UI and REST APIs are
		// accessible.
		service_endpoint?: string

		// The current state of this Data Fusion instance.
		// - CREATING: Instance is being created
		// - RUNNING: Instance is running and ready for requests
		// - FAILED: Instance creation failed
		// - DELETING: Instance is being deleted
		// - UPGRADING: Instance is being upgraded
		// - RESTARTING: Instance is being restarted
		state?: string

		// Additional information about the current state of this Data
		// Fusion instance if available.
		state_message?: string

		// A map of resource manager tags.
		// Resource manager tag keys and values have the same definition
		// as resource manager tags.
		// Keys must be in the format tagKeys/{tag_key_id}, and values are
		// in the format tagValues/{tag_value_id}.
		// The field is ignored (both PUT & PATCH) when empty.
		tags?: [string]: string

		// The name of the tenant project.
		tenant_project_id?: string

		// The combination of labels configured directly on the resource
		// and default labels configured on the provider.
		terraform_labels?: [string]: string

		// Represents the type of Data Fusion instance. Each type is
		// configured with
		// the default settings for processing and memory.
		// - BASIC: Basic Data Fusion instance. In Basic type, the user
		// will be able to create data pipelines
		// using point and click UI. However, there are certain
		// limitations, such as fewer number
		// of concurrent pipelines, no support for streaming pipelines,
		// etc.
		// - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise
		// type, the user will have more features
		// available, such as support for streaming pipelines, higher
		// number of concurrent pipelines, etc.
		// - DEVELOPER: Developer Data Fusion instance. In Developer type,
		// the user will have all features available but
		// with restrictive capabilities. This is to help enterprises
		// design and develop their data ingestion and integration
		// pipelines at low cost. Possible values: ["BASIC", "ENTERPRISE",
		// "DEVELOPER"]
		type!: string

		// The time the instance was last updated in RFC3339 UTC "Zulu"
		// format, accurate to nanoseconds.
		update_time?: string

		// Current version of the Data Fusion.
		version?: string

		// Name of the zone in which the Data Fusion instance will be
		// created. Only DEVELOPER instances use this field.
		zone?: string
	})

	#accelerators: close({
		// The type of an accelator for a CDF instance. Possible values:
		// ["CDC", "HEALTHCARE", "CCAI_INSIGHTS"]
		accelerator_type!: string

		// The type of an accelator for a CDF instance. Possible values:
		// ["ENABLED", "DISABLED"]
		state!: string
	})

	#crypto_key_config: close({
		// The name of the key which is used to encrypt/decrypt customer
		// data. For key in Cloud KMS, the key should be in the format of
		// projects/*/locations/*/keyRings/*/cryptoKeys/*.
		key_reference!: string
	})

	#event_publish_config: close({
		// Option to enable Event Publishing.
		enabled!: bool

		// The resource name of the Pub/Sub topic. Format:
		// projects/{projectId}/topics/{topic_id}
		topic!: string
	})

	#network_config: close({
		// Optional. Type of connection for establishing private IP
		// connectivity between the Data Fusion customer project VPC and
		// the corresponding tenant project from a predefined list of
		// available connection modes.
		// If this field is unspecified for a private instance, VPC
		// peering is used. Possible values: ["VPC_PEERING",
		// "PRIVATE_SERVICE_CONNECT_INTERFACES"]
		connection_type?: string
		private_service_connect_config?: matchN(1, [_#defs."/$defs/network_config/$defs/private_service_connect_config", list.MaxItems(1) & [..._#defs."/$defs/network_config/$defs/private_service_connect_config"]])

		// The IP range in CIDR notation to use for the managed Data
		// Fusion instance
		// nodes. This range must not overlap with any other ranges used
		// in the Data Fusion instance network.
		ip_allocation?: string

		// Name of the network in the project with which the tenant
		// project
		// will be peered for executing pipelines. In case of shared VPC
		// where the network resides in another host
		// project the network should specified in the form of
		// projects/{host-project-id}/global/networks/{network}
		network?: string
	})

	#timeouts: close({
		create?: string
		delete?: string
		update?: string
	})

	_#defs: "/$defs/network_config/$defs/private_service_connect_config": close({
		// Output only. The CIDR block to which the CDF instance can't
		// route traffic to in the consumer project VPC.
		// The size of this block is /25. The format of this field is
		// governed by RFC 4632.
		effective_unreachable_cidr_block?: string

		// Optional. The reference to the network attachment used to
		// establish private connectivity.
		// It will be of the form
		// projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
		// This is required only when using connection type
		// PRIVATE_SERVICE_CONNECT_INTERFACES.
		network_attachment?: string

		// Optional. Input only. The CIDR block to which the CDF instance
		// can't route traffic to in the consumer project VPC.
		// The size of this block should be at least /25. This range
		// should not overlap with the primary address range of any
		// subnetwork used by the network attachment.
		// This range can be used for other purposes in the consumer VPC
		// as long as there is no requirement for CDF to reach
		// destinations using these addresses.
		// If this value is not provided, the server chooses a non RFC
		// 1918 address range. The format of this field is governed by
		// RFC 4632.
		unreachable_cidr_block?: string
	})
}
