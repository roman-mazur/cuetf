package res

import "list"

#google_iap_settings: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/google_iap_settings")
	close({
		access_settings?: matchN(1, [#access_settings, list.MaxItems(1) & [...#access_settings]])
		application_settings?: matchN(1, [#application_settings, list.MaxItems(1) & [...#application_settings]])
		timeouts?: #timeouts
		id?:       string

		// The resource name of the IAP protected resource. Name can have
		// below resources:
		// * organizations/{organization_id}
		// * folders/{folder_id}
		// * projects/{project_id}
		// * projects/{project_id}/iap_web
		// * projects/{project_id}/iap_web/compute
		// * projects/{project_id}/iap_web/compute-{region}
		// * projects/{project_id}/iap_web/compute/services/{service_id}
		// *
		// projects/{project_id}/iap_web/compute-{region}/services/{service_id}
		// * projects/{project_id}/iap_web/appengine-{app_id}
		// *
		// projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}
		// *
		// projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
		name!: string
	})

	#access_settings: close({
		allowed_domains_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/allowed_domains_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/allowed_domains_settings"]])
		cors_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/cors_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/cors_settings"]])
		gcip_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/gcip_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/gcip_settings"]])
		oauth_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/oauth_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/oauth_settings"]])
		reauth_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/reauth_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/reauth_settings"]])
		workforce_identity_settings?: matchN(1, [_#defs."/$defs/access_settings/$defs/workforce_identity_settings", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/workforce_identity_settings"]])

		// Identity sources that IAP can use to authenticate the end user.
		// Only one identity source
		// can be configured. The possible values are:
		//
		// * 'WORKFORCE_IDENTITY_FEDERATION': Use external identities set
		// up on Google Cloud Workforce
		// Identity Federation. Possible values:
		// ["WORKFORCE_IDENTITY_FEDERATION"]
		identity_sources?: [...string]
	})

	#application_settings: close({
		access_denied_page_settings?: matchN(1, [_#defs."/$defs/application_settings/$defs/access_denied_page_settings", list.MaxItems(1) & [..._#defs."/$defs/application_settings/$defs/access_denied_page_settings"]])
		attribute_propagation_settings?: matchN(1, [_#defs."/$defs/application_settings/$defs/attribute_propagation_settings", list.MaxItems(1) & [..._#defs."/$defs/application_settings/$defs/attribute_propagation_settings"]])
		csm_settings?: matchN(1, [_#defs."/$defs/application_settings/$defs/csm_settings", list.MaxItems(1) & [..._#defs."/$defs/application_settings/$defs/csm_settings"]])

		// The Domain value to set for cookies generated by IAP. This
		// value is not validated by the API,
		// but will be ignored at runtime if invalid.
		cookie_domain?: string
	})

	#timeouts: close({
		create?: string
		delete?: string
		update?: string
	})

	_#defs: "/$defs/access_settings/$defs/allowed_domains_settings": close({
		// List of trusted domains.
		domains?: [...string]

		// Configuration for customers to opt in for the feature.
		enable?: bool
	})

	_#defs: "/$defs/access_settings/$defs/cors_settings": close({
		// Configuration to allow HTTP OPTIONS calls to skip
		// authorization.
		// If undefined, IAP will not apply any special logic to OPTIONS
		// requests.
		allow_http_options?: bool
	})

	_#defs: "/$defs/access_settings/$defs/gcip_settings": close({
		// Login page URI associated with the GCIP tenants. Typically, all
		// resources within
		// the same project share the same login page, though it could be
		// overridden at the
		// sub resource level.
		login_page_uri?: string

		// GCIP tenant ids that are linked to the IAP resource. tenantIds
		// could be a string
		// beginning with a number character to indicate authenticating
		// with GCIP tenant flow,
		// or in the format of _ to indicate authenticating with GCIP
		// agent flow. If agent flow
		// is used, tenantIds should only contain one single element,
		// while for tenant flow,
		// tenantIds can contain multiple elements.
		tenant_ids?: [...string]
	})

	_#defs: "/$defs/access_settings/$defs/oauth_settings": close({
		// Domain hint to send as hd=? parameter in OAuth request flow.
		// Enables redirect to primary IDP by skipping Google's login
		// screen.
		// (https://developers.google.com/identity/protocols/OpenIDConnect#hd-param)
		// Note: IAP does not verify that the id token's hd claim matches
		// this value
		// since access behavior is managed by IAM policies.
		// * loginHint setting is not a replacement for access control.
		// Always enforce an appropriate access policy if you want to
		// restrict access to users outside your domain.
		login_hint?: string

		// List of client ids allowed to use IAP programmatically.
		programmatic_clients?: [...string]
	})

	_#defs: "/$defs/access_settings/$defs/reauth_settings": close({
		// Reauth session lifetime, how long before a user has to
		// reauthenticate again.
		// A duration in seconds with up to nine fractional digits, ending
		// with 's'.
		// Example: "3.5s".
		max_age!: string

		// Reauth method requested. The possible values are:
		//
		// * 'LOGIN': Prompts the user to log in again.
		// * 'SECURE_KEY': User must use their secure key 2nd factor
		// device.
		// * 'ENROLLED_SECOND_FACTORS': User can use any enabled 2nd
		// factor. Possible values: ["LOGIN", "SECURE_KEY",
		// "ENROLLED_SECOND_FACTORS"]
		method!: string

		// How IAP determines the effective policy in cases of
		// hierarchical policies.
		// Policies are merged from higher in the hierarchy to lower in
		// the hierarchy.
		// The possible values are:
		//
		// * 'MINIMUM': This policy acts as a minimum to other policies,
		// lower in the hierarchy.
		// Effective policy may only be the same or stricter.
		// * 'DEFAULT': This policy acts as a default if no other reauth
		// policy is set. Possible values: ["MINIMUM", "DEFAULT"]
		policy_type!: string
	})

	_#defs: "/$defs/access_settings/$defs/workforce_identity_settings": close({
		oauth2?: matchN(1, [_#defs."/$defs/access_settings/$defs/workforce_identity_settings/$defs/oauth2", list.MaxItems(1) & [..._#defs."/$defs/access_settings/$defs/workforce_identity_settings/$defs/oauth2"]])

		// The workforce pool resources. Only one workforce pool is
		// accepted.
		workforce_pools?: [...string]
	})

	_#defs: "/$defs/access_settings/$defs/workforce_identity_settings/$defs/oauth2": close({
		// The OAuth 2.0 client ID registered in the workforce identity
		// federation OAuth 2.0 Server.
		client_id?: string

		// Input only. The OAuth 2.0 client secret created while
		// registering
		// the client ID.
		client_secret?: string

		// Output only. SHA256 hash value for the client secret. This
		// field
		// is returned by IAP when the settings are retrieved.
		client_secret_sha256?: string
	})

	_#defs: "/$defs/application_settings/$defs/access_denied_page_settings": close({
		// The URI to be redirected to when access is denied.
		access_denied_page_uri?: string

		// Whether to generate a troubleshooting URL on access denied
		// events to this application.
		generate_troubleshooting_uri?: bool

		// Whether to generate remediation token on access denied events
		// to this application.
		remediation_token_generation_enabled?: bool
	})

	_#defs: "/$defs/application_settings/$defs/attribute_propagation_settings": close({
		// Whether the provided attribute propagation settings should be
		// evaluated on user requests.
		// If set to true, attributes returned from the expression will be
		// propagated in the set output credentials.
		enable?: bool

		// Raw string CEL expression. Must return a list of attributes. A
		// maximum of 45 attributes can
		// be selected. Expressions can select different attribute types
		// from attributes:
		// attributes.saml_attributes, attributes.iap_attributes.
		expression?: string

		// Which output credentials attributes selected by the CEL
		// expression should be propagated in.
		// All attributes will be fully duplicated in each selected output
		// credential.
		// Possible values are:
		//
		// * 'HEADER': Propagate attributes in the headers with
		// "x-goog-iap-attr-" prefix.
		// * 'JWT': Propagate attributes in the JWT of the form:
		// "additional_claims": { "my_attribute": ["value1", "value2"] }
		// * 'RCTOKEN': Propagate attributes in the RCToken of the form: "
		// additional_claims": { "my_attribute": ["value1", "value2"] }
		// Possible values: ["HEADER", "JWT", "RCTOKEN"]
		output_credentials?: [...string]
	})

	_#defs: "/$defs/application_settings/$defs/csm_settings": close({
		// Audience claim set in the generated RCToken. This value is not
		// validated by IAP.
		rctoken_aud?: string
	})
}
