package res

import "list"

#google_firebaserules_ruleset: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/google_firebaserules_ruleset")
	close({
		// Output only. Time the `Ruleset` was created.
		create_time?: string
		id?:          string
		source?: matchN(1, [#source, list.MaxItems(1) & [_, ...] & [...#source]])

		// Output only. The metadata for this ruleset.
		metadata?: [...close({
			services?: [...string]
		})]

		// Output only. Name of the `Ruleset`. The ruleset_id is auto
		// generated by the service. Format:
		// `projects/{project_id}/rulesets/{ruleset_id}`
		name?:     string
		timeouts?: #timeouts

		// The project for the resource
		project?: string
	})

	#source: close({
		files?: matchN(1, [_#defs."/$defs/source/$defs/files", [_, ...] & [..._#defs."/$defs/source/$defs/files"]])

		// `Language` of the `Source` bundle. If unspecified, the language
		// will default to `FIREBASE_RULES`. Possible values:
		// LANGUAGE_UNSPECIFIED, FIREBASE_RULES, EVENT_FLOW_TRIGGERS
		language?: string
	})

	#timeouts: close({
		create?: string
		delete?: string
	})

	_#defs: "/$defs/source/$defs/files": close({
		// Textual Content.
		content!: string

		// Fingerprint (e.g. github sha) associated with the `File`.
		fingerprint?: string

		// File name.
		name!: string
	})
}
