package res

import "list"

#google_cloud_run_domain_mapping: {
	@jsonschema(schema="https://json-schema.org/draft/2020-12/schema")
	@jsonschema(id="https://github.com/roman-mazur/cuetf/schema/google_cloud_run_domain_mapping")
	close({
		id?: string

		// The location of the cloud run instance. eg us-central1
		location!: string

		// Name should be a
		// [verified](https://support.google.com/webmasters/answer/9008080)
		// domain
		name!: string
		metadata?: matchN(1, [#metadata, list.MaxItems(1) & [...#metadata]])

		// The current status of the DomainMapping.
		status?: [...close({
			conditions?: [...close({
				message?: string
				reason?:  string
				status?:  string
				type?:    string
			})]
			mapped_route_name?:   string
			observed_generation?: number
			resource_records?: [...close({
				name?:   string
				rrdata?: string
				type?:   string
			})]
		})]
		project?: string
		spec?: matchN(1, [#spec, list.MaxItems(1) & [_, ...] & [...#spec]])
		timeouts?: #timeouts
	})

	#metadata: close({
		// Annotations is a key value map stored with a resource that
		// may be set by external tools to store and retrieve arbitrary
		// metadata.
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
		//
		// **Note**: The Cloud Run API may add additional annotations that
		// were not provided in your config.
		// If terraform plan shows a diff where a server-side annotation
		// is added, you can add it to your config
		// or apply the lifecycle.ignore_changes rule to the
		// metadata.0.annotations field.
		//
		// **Note**: This field is non-authoritative, and will only manage
		// the annotations present in your configuration.
		// Please refer to the field 'effective_annotations' for all of
		// the annotations present on the resource.
		annotations?: [string]: string

		// All of annotations (key/value pairs) present on the resource in
		// GCP, including the annotations configured through Terraform,
		// other clients and services.
		effective_annotations?: [string]: string

		// All of labels (key/value pairs) present on the resource in GCP,
		// including the labels configured through Terraform, other
		// clients and services.
		effective_labels?: [string]: string

		// A sequence number representing a specific generation of the
		// desired state.
		generation?: number

		// Map of string keys and values that can be used to organize and
		// categorize
		// (scope and select) objects. May match selectors of replication
		// controllers
		// and routes.
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
		//
		// **Note**: This field is non-authoritative, and will only manage
		// the labels present in your configuration.
		// Please refer to the field 'effective_labels' for all of the
		// labels present on the resource.
		labels?: [string]: string

		// In Cloud Run the namespace must be equal to either the
		// project ID or project number.
		namespace!: string

		// An opaque value that represents the internal version of this
		// object that
		// can be used by clients to determine when objects have changed.
		// May be used
		// for optimistic concurrency, change detection, and the watch
		// operation on a
		// resource or set of resources. They may only be valid for a
		// particular resource or set of resources.
		//
		// More info:
		// https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
		resource_version?: string

		// SelfLink is a URL representing this object.
		self_link?: string

		// The combination of labels configured directly on the resource
		// and default labels configured on the provider.
		terraform_labels?: [string]: string

		// UID is a unique id generated by the server on successful
		// creation of a resource and is not
		// allowed to change on PUT operations.
		//
		// More info:
		// https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
		uid?: string
	})

	#spec: close({
		// The mode of the certificate. Default value: "AUTOMATIC"
		// Possible values: ["NONE", "AUTOMATIC"]
		certificate_mode?: string

		// If set, the mapping will override any mapping set before this
		// spec was set.
		// It is recommended that the user leaves this empty to receive an
		// error
		// warning about a potential conflict and only set it once the
		// respective UI
		// has given such a warning.
		force_override?: bool

		// The name of the Cloud Run Service that this DomainMapping
		// applies to.
		// The route must exist.
		route_name!: string
	})

	#timeouts: close({
		create?: string
		delete?: string
	})
}
